name: tests

on:
  push:
    paths:
      - "location_allocation/**"
      - "tests/**"
      - ".github/workflows/ci-tests.yml"
      - "setup.py"
      - "pyproject.toml"
      - ".coveragerc"
  pull_request:
    branches:
      - master
    paths:
      - "location_allocation/**"
      - "tests/**"
      - ".github/workflows/ci-tests.yml"
      - "setup.py"
      - "pyproject.toml"
      - ".coveragerc"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        python_version: [3.7, 3.8, 3.9, 'pypy-3.7']
        os: [macos-latest, ubuntu-18.04, ubuntu-16.04, ubuntu-20.04, windows-2019, windows-2016]
        exclude:
          # excludes pypy Windows because only 32 bit pypy is supported.
          - os: windows-2019
            python_version: pypy-3.7
          - os: windows-2016
            python_version: pypy-3.7
          # temporarily exclude pypy3 on macos
          - os: macos-latest
            python_version: pypy-3.7
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python_version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python_version }}
    - name: Get full python version
      id: full-python-version
      run: |
        echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info[:3]))")
        echo ::set-output name=versionshort::$(python -c "import sys; print(''.join(str(v) for v in sys.version_info[:2]))")
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
    - name: Load cached venv
      id: cached-pip-wheels
      uses: actions/cache@v2
      with:
        path: ~/.cache
        key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      run: poetry install
    - name: Install dependencies
      - run: |
          source .venv/scripts/activate
          poetry install
        if: runner.os == 'Windows'
      - run: |
          source .venv/bin/activate
          poetry install
        if: runner.os != 'Windows'
    - name: style & lint checks
      - run: |
          source .venv/scripts/activate
          pre-commit run
        if: runner.os == 'Windows'
      - run: |
          source .venv/bin/activate
          pre-commit run
        if: runner.os != 'Windows'
    - name: pytest
      - run: |
          source .venv/scripts/activate
          pytest --cov=location_allocation tests/
        if: runner.os == 'Windows'
      - run: |
          source .venv/bin/activate
          pytest --cov=location_allocation tests/
        if: runner.os != 'Windows' 
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}